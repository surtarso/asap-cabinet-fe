name: Python CI for PyQt5 App

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'img/*'
      - 'snd/*'
      - 'media_tools/README.md'
      - 'launch.sh'
      - 'TODO'
  pull_request:
    branches:
      - main

jobs:
  build_linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pyqt5 libpulse-mainloop-glib0 pulseaudio
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start pulseaudio daemon
        run: pulseaudio --start

      - name: Create test directories and files
        run: |
          mkdir -p /home/runner/Games/vpinball/build/tables/test
          touch /home/runner/Games/vpinball/build/tables/test/test_file.vpx
          touch /home/runner/Games/vpinball/VPinballX_GL

      - name: Set QT_QPA_PLATFORM to offscreen
        run: echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV

      - name: Install pytest
        run: pip install pytest pytest-qt sip

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Run the app (CI auto-exit)
        env:
          CI: "true"
        run: python3 asap_cabinet_fe.py

      - name: Install dependencies
        run: |
          # Ensure python3 and pip3 are installed
          sudo apt update
          sudo apt install -y python3 python3-pip ruby-full
          pip3 install pyqt5 pyinstaller
  
      - name: Build Linux Executable
        run: |
          # Build the executable using pyinstaller
          python3 -m PyInstaller --onefile --add-data "img:img" --add-data "snd:snd" asap_cabinet_fe.py
  
      - name: Upload Linux Binary
        uses: actions/upload-artifact@v4
        with:
          name: asap_cabinet_fe-linux
          path: dist/asap_cabinet_fe
  
      - name: Build .deb Package
        run: |
          # Install fpm using the --user-install flag to avoid permission issues
          gem install --no-document fpm --user-install
          
          # Create necessary directories and copy files
          mkdir -p package/opt/asap_cabinet_fe/img
          mkdir -p package/opt/asap_cabinet_fe/snd
          cp asap_cabinet_fe.py package/opt/asap_cabinet_fe/
          cp -r img/* package/opt/asap_cabinet_fe/img/
          cp -r snd/* package/opt/asap_cabinet_fe/snd/
  
          # Build the .deb package
          fpm -s dir -t deb -n asap_cabinet_fe -v 1.0 --prefix / package/opt/asap_cabinet_fe
          
      - name: Upload .deb Package
        uses: actions/upload-artifact@v4
        with:
          name: asap_cabinet_fe-deb
          path: "*.deb"

  build_windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python and dependencies
        run: |
          pip install pyinstaller sip
          pip install -r requirements.txt

      - name: Build Windows Executable
        run: pyinstaller --onefile --add-data "img;img" --add-data "snd;snd" asap_cabinet_fe.py

      - name: Upload Windows Binary
        uses: actions/upload-artifact@v4
        with:
          name: asap_cabinet_fe-windows
          path: dist/asap_cabinet_fe.exe

  build_macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python and dependencies
        run: |
          # Ensure python3 is installed, skip if already present
          if ! command -v python3 &> /dev/null
          then
            brew install python3
          else
            echo "Python 3 is already installed"
          fi

          # Create and activate a virtual environment
          python3 -m venv venv
          source venv/bin/activate
          
          # Upgrade pip in the virtual environment and install dependencies
          python3 -m pip install --upgrade pip
          pip install pyqt5 pyinstaller

      - name: Build macOS Executable
        run: |
          # Ensure virtual environment is activated
          source venv/bin/activate
          pyinstaller --onefile --add-data "img:img" --add-data "snd:snd" asap_cabinet_fe.py

      - name: Upload macOS Binary
        uses: actions/upload-artifact@v4
        with:
          name: asap_cabinet_fe-macos
          path: dist/asap_cabinet_fe

  package_source:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Package Source Code
        run: zip -r asap_cabinet_fe-1.0.zip asap_cabinet_fe.py img/ snd/

      - name: Upload Source Zip
        uses: actions/upload-artifact@v4
        with:
          name: asap_cabinet_fe-source
          path: asap_cabinet_fe-1.0.zip
